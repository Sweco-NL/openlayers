import Map from "../src/ol/Map.js";
import View from "../src/ol/View.js";
import WKB from "../src/ol/format/WKB.js";
import { OSM, Vector as VectorSource } from "../src/ol/source.js";
import { Tile as TileLayer, Vector as VectorLayer } from "../src/ol/layer.js";
import { Fill, Stroke, Style, Text } from "ol/style.js";

const raster = new TileLayer({
  source: new OSM(),
});

const wkb = [
  //  COMPOUNDCURVE(
  //    CIRCULARSTRING(1 2, 2 4, 4 2),
  //    (4 2, 5 4, 4 5),
  //    CIRCULARSTRING(4 5, 3 6, 4 8)
  //  ) // XY
  "010900000003000000010800000003000000000000000000f03f00000000000000400000000000000040000000000000104000000000000010400000000000000040010200000003000000000000000000104000000000000000400000000000001440000000000000104000000000000010400000000000001440010800000003000000000000000000104000000000000014400000000000000840000000000000184000000000000010400000000000002040",

  // COMPOUNDCURVE(
  //   CIRCULARSTRING(11 2, 12 4, 14 2),
  //   (14 2, 15 4, 14 5),
  //   CIRCULARSTRING(14 5, 13 6, 14 8),
  //   (14 8, 18 4, 18 0, 11 2)
  // ) // XY closed
  "01090000000400000001080000000300000000000000000026400000000000000040000000000000284000000000000010400000000000002c4000000000000000400102000000030000000000000000002c4000000000000000400000000000002e4000000000000010400000000000002c4000000000000014400108000000030000000000000000002c4000000000000014400000000000002a4000000000000018400000000000002c4000000000000020400102000000040000000000000000002c400000000000002040000000000000324000000000000010400000000000003240000000000000000000000000000026400000000000000040",

  //  COMPOUNDCURVE(
  //    CIRCULARSTRING(21 2 2, 22 4 2, 24 2 2),
  //    (24 2 2, 25 4 2, 24 5 2),
  //    CIRCULARSTRING(24 5 2, 23 6 2, 24 8 2)
  //  ) // XYZ
  "01f10300000300000001f00300000300000000000000000035400000000000000040000000000000004000000000000036400000000000001040000000000000004000000000000038400000000000000040000000000000004001ea0300000300000000000000000038400000000000000040000000000000004000000000000039400000000000001040000000000000004000000000000038400000000000001440000000000000004001f003000003000000000000000000384000000000000014400000000000000040000000000000374000000000000018400000000000000040000000000000384000000000000020400000000000000040",

  //  COMPOUNDCURVE(
  //    CIRCULARSTRING(31 2 3, 32 4 3, 34 2 3),
  //    (34 2 3, 35 4 3, 34 5 3),
  //    CIRCULARSTRING(34 5 3, 33 6 3, 34 8 3),
  //    (34 8 3, 38 4 3, 38 0 3, 31 2 3)
  //  ) // XYZ closed
  "01f10300000400000001f0030000030000000000000000003f400000000000000040000000000000084000000000000040400000000000001040000000000000084000000000000041400000000000000040000000000000084001ea0300000300000000000000000041400000000000000040000000000000084000000000008041400000000000001040000000000000084000000000000041400000000000001440000000000000084001f00300000300000000000000000041400000000000001440000000000000084000000000008040400000000000001840000000000000084000000000000041400000000000002040000000000000084001ea030000040000000000000000004140000000000000204000000000000008400000000000004340000000000000104000000000000008400000000000004340000000000000000000000000000008400000000000003f4000000000000000400000000000000840",
];

const format = new WKB();

const features = wkb.map((wkb) => {
  return format.readFeature(wkb, {
    dataProjection: "EPSG:4326",
    featureProjection: "EPSG:3857",
  });
});

features.forEach((feature, i) => {
  feature.setStyle(
    new Style({
      stroke: new Stroke({
        color: "red",
        width: 2,
      }),
      text: new Text({
        text: "Feature" + i,
        fill: new Fill({
          color: "black",
        }),
        stroke: new Stroke({
          color: "white",
          width: 2,
        }),
      }),
    })
  );
});

const vector = new VectorLayer({
  source: new VectorSource({
    features: features,
  }),
});

const map = new Map({
  layers: [raster, vector],
  target: "map",
  view: new View({
    center: [0, 0],
    zoom: 4,
  }),
});
